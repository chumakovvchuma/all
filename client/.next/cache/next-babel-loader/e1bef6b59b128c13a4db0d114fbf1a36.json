{"ast":null,"code":"var _jsxFileName = \"/Users/victorchumakov/Documents/blogg/all/client/components/GithubRepo.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { ButtonSubmit, LinkText, Para, Table } from 'device-agnostic-ui';\nimport { useGraphQL } from 'graphql-react';\nimport React from 'react';\nimport { githubFetchOptionsOverride } from '../config';\nimport { Errors } from './Errors';\nconst query =\n/* GraphQL */\n`\n  query($repoId: ID!) {\n    repo: node(id: $repoId) {\n      ... on Repository {\n        url\n        nameWithOwner\n        description\n        stargazers {\n          totalCount\n        }\n      }\n    }\n    rateLimit {\n      remaining\n    }\n  }\n`;\nexport const GithubRepo = ({\n  repoId\n}) => {\n  const operation = React.useMemo(() => ({\n    query,\n    variables: {\n      repoId\n    }\n  }), [repoId]);\n\n  const _useGraphQL = useGraphQL({\n    operation,\n    fetchOptionsOverride: githubFetchOptionsOverride,\n    loadOnMount: true,\n    loadOnReload: true,\n    loadOnReset: true\n  }),\n        {\n    load,\n    loading,\n    cacheValue: {\n      data\n    } = {}\n  } = _useGraphQL,\n        errors = _objectWithoutProperties(_useGraphQL.cacheValue, [\"data\"]);\n\n  return __jsx(React.Fragment, null, data && __jsx(React.Fragment, null, data.repo && __jsx(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, __jsx(\"th\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  }, \"Repo\"), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }\n  }, __jsx(LinkText, {\n    href: data.repo.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, data.repo.nameWithOwner))), __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, __jsx(\"th\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }\n  }, \"Description\"), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }\n  }, __jsx(Para, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, data.repo.description))), __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, __jsx(\"th\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }\n  }, \"Stars\"), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }\n  }, data.repo.stargazers.totalCount)))), __jsx(Para, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, data.rateLimit.remaining), \" GitHub API rate limit points remaining for this 60 min window.\")), __jsx(ButtonSubmit, {\n    loading: loading,\n    onClick: load,\n    title: \"Refresh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"\\u21BB\"), __jsx(Errors, _extends({}, errors, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/victorchumakov/Documents/blogg/all/client/components/GithubRepo.js"],"names":["ButtonSubmit","LinkText","Para","Table","useGraphQL","React","githubFetchOptionsOverride","Errors","query","GithubRepo","repoId","operation","useMemo","variables","fetchOptionsOverride","loadOnMount","loadOnReload","loadOnReset","load","loading","cacheValue","data","errors","repo","url","nameWithOwner","description","stargazers","totalCount","rateLimit","remaining"],"mappings":"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","sourcesContent":["import { ButtonSubmit, LinkText, Para, Table } from 'device-agnostic-ui';\nimport { useGraphQL } from 'graphql-react';\nimport React from 'react';\nimport { githubFetchOptionsOverride } from '../config';\nimport { Errors } from './Errors';\n\nconst query = /* GraphQL */ `\n  query($repoId: ID!) {\n    repo: node(id: $repoId) {\n      ... on Repository {\n        url\n        nameWithOwner\n        description\n        stargazers {\n          totalCount\n        }\n      }\n    }\n    rateLimit {\n      remaining\n    }\n  }\n`;\n\nexport const GithubRepo = ({ repoId }) => {\n  const operation = React.useMemo(\n    () => ({\n      query,\n      variables: {\n        repoId,\n      },\n    }),\n    [repoId]\n  );\n\n  const { load, loading, cacheValue: { data, ...errors } = {} } = useGraphQL({\n    operation,\n    fetchOptionsOverride: githubFetchOptionsOverride,\n    loadOnMount: true,\n    loadOnReload: true,\n    loadOnReset: true,\n  });\n\n  return (\n    <>\n      {data && (\n        <>\n          {data.repo && (\n            <Table>\n              <tbody>\n                <tr>\n                  <th scope=\"row\">Repo</th>\n                  <td>\n                    <LinkText href={data.repo.url}>\n                      {data.repo.nameWithOwner}\n                    </LinkText>\n                  </td>\n                </tr>\n                <tr>\n                  <th scope=\"row\">Description</th>\n                  <td>\n                    <Para>{data.repo.description}</Para>\n                  </td>\n                </tr>\n                <tr>\n                  <th scope=\"row\">Stars</th>\n                  <td>{data.repo.stargazers.totalCount}</td>\n                </tr>\n              </tbody>\n            </Table>\n          )}\n          <Para>\n            <strong>{data.rateLimit.remaining}</strong> GitHub API rate limit\n            points remaining for this 60 min window.\n          </Para>\n        </>\n      )}\n      <ButtonSubmit loading={loading} onClick={load} title=\"Refresh\">\n        â†»\n      </ButtonSubmit>\n      <Errors {...errors} />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}