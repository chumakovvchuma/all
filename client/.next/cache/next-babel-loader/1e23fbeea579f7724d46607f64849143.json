{"ast":null,"code":"var _jsxFileName = \"/Users/victorchumakov/Documents/blogg/all/client/components/Errors.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { List, Para } from 'device-agnostic-ui';\nimport { ErrorMessage } from './ErrorMessage';\nexport const Errors = ({\n  fetchError,\n  httpError,\n  parseError,\n  graphQLErrors\n}) => __jsx(React.Fragment, null, fetchError && __jsx(ErrorMessage, {\n  heading: \"Fetch error\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }\n}, __jsx(Para, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }\n}, fetchError)), httpError && __jsx(ErrorMessage, {\n  heading: `HTTP error: ${httpError.status}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }\n}, httpError.statusText && __jsx(Para, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 34\n  }\n}, httpError.statusText)), parseError && __jsx(ErrorMessage, {\n  heading: \"Parse error\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }\n}, __jsx(Para, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }\n}, parseError)), graphQLErrors && __jsx(ErrorMessage, {\n  heading: \"GraphQL errors\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }\n}, __jsx(List, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }\n}, graphQLErrors.map(({\n  message\n}, index) => __jsx(\"li\", {\n  // eslint-disable-next-line react/no-array-index-key\n  key: index,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 13\n  }\n}, message)))));","map":{"version":3,"sources":["/Users/victorchumakov/Documents/blogg/all/client/components/Errors.js"],"names":["List","Para","ErrorMessage","Errors","fetchError","httpError","parseError","graphQLErrors","status","statusText","map","message","index"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,IAAf,QAA2B,oBAA3B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,OAAO,MAAMC,MAAM,GAAG,CAAC;AACrBC,EAAAA,UADqB;AAErBC,EAAAA,SAFqB;AAGrBC,EAAAA,UAHqB;AAIrBC,EAAAA;AAJqB,CAAD,KAMpB,4BACGH,UAAU,IACT,MAAC,YAAD;AAAc,EAAA,OAAO,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAOA,UAAP,CADF,CAFJ,EAMGC,SAAS,IACR,MAAC,YAAD;AAAc,EAAA,OAAO,EAAG,eAAcA,SAAS,CAACG,MAAO,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGH,SAAS,CAACI,UAAV,IAAwB,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAOJ,SAAS,CAACI,UAAjB,CAD3B,CAPJ,EAWGH,UAAU,IACT,MAAC,YAAD;AAAc,EAAA,OAAO,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAOA,UAAP,CADF,CAZJ,EAgBGC,aAAa,IACZ,MAAC,YAAD;AAAc,EAAA,OAAO,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,aAAa,CAACG,GAAd,CAAkB,CAAC;AAAEC,EAAAA;AAAF,CAAD,EAAcC,KAAd,KACjB;AACE;AACA,EAAA,GAAG,EAAEA,KAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAIGD,OAJH,CADD,CADH,CADF,CAjBJ,CANK","sourcesContent":["import { List, Para } from 'device-agnostic-ui';\nimport { ErrorMessage } from './ErrorMessage';\n\nexport const Errors = ({\n  fetchError,\n  httpError,\n  parseError,\n  graphQLErrors,\n}) => (\n  <>\n    {fetchError && (\n      <ErrorMessage heading=\"Fetch error\">\n        <Para>{fetchError}</Para>\n      </ErrorMessage>\n    )}\n    {httpError && (\n      <ErrorMessage heading={`HTTP error: ${httpError.status}`}>\n        {httpError.statusText && <Para>{httpError.statusText}</Para>}\n      </ErrorMessage>\n    )}\n    {parseError && (\n      <ErrorMessage heading=\"Parse error\">\n        <Para>{parseError}</Para>\n      </ErrorMessage>\n    )}\n    {graphQLErrors && (\n      <ErrorMessage heading=\"GraphQL errors\">\n        <List>\n          {graphQLErrors.map(({ message }, index) => (\n            <li\n              // eslint-disable-next-line react/no-array-index-key\n              key={index}\n            >\n              {message}\n            </li>\n          ))}\n        </List>\n      </ErrorMessage>\n    )}\n  </>\n);\n"]},"metadata":{},"sourceType":"module"}